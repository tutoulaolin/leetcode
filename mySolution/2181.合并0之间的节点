/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeNodes(ListNode* head) {
        ListNode* last;
        ListNode* tmp;//移动指针
        ListNode* now;//当前指针
        int n=0;

        last=head;
        
        now=head->next;
        tmp=now->next;
        while(last->next!=nullptr)
        {
            n++;
            last=last->next;
            //last是末尾指针
        }
        while(now->next!=last){
            now->val+=tmp->val;
            if(tmp->val!=0)
            tmp=tmp->next;
            if(tmp->val==0&&tmp!=last){
                now->next=tmp;
                now=tmp->next;
                tmp=now->next;
            }
            else if(tmp==last){
                now->next=last;
            }
        }

        head=head->next;
        tmp=head;
        now=head;
        while(tmp->next!=last){
            tmp=tmp->next;
            if(tmp->val==0){
                now->next=tmp->next;
                now=now->next;
                tmp=now;

            }
        

        }
        tmp->next=nullptr;
        

        
        
        return head;

    }
};
