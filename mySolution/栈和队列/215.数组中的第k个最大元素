class Solution {
    public int findKthLargest(int[] nums, int k) {
        /*
        PriorityQueue<Integer> maxHeap=new PriorityQueue<>((a,b)->b-a);
        for(int n:nums)
        maxHeap.offer(n);

        
        for(int i=0;i<k-1;i++){
            maxHeap.poll();

        }
        return maxHeap.poll();
        */
        PriorityQueue<Integer> minHeap=new PriorityQueue<>(k);

        for(int i=0;i<k;i++){
            minHeap.offer(nums[i]);
        }
        int top=minHeap.peek();
        for(int i=k;i<nums.length;i++){
            if(nums[i]>top){
                minHeap.poll();
                minHeap.offer(nums[i]);
                top=minHeap.peek();
            }
        }

        return minHeap.peek();
    }
}
