//1 stack
class Solution {
    public boolean isValid(String s) {
        char[] str=s.toCharArray();
        Stack<Character> a=new Stack<>();
        char c1;
        char c2;
        for(int i=0;i<s.length();i++){
            if(!a.isEmpty())
            {
                c1=str[i];
                c2=a.peek();
                
                if(c1=='('||c1=='['||c1=='{')
                a.push(c1);
                else{
                    if(c1==')')
                    {
                        if(c2=='(') 
                        a.pop();
                        else 
                        return false;
                    }
                    else if(c1==']'){
                        if(c2=='[') 
                        a.pop();
                        else 
                        return false;
                    }
                    else if(c1=='}'){
                        if(c2=='{') 
                        a.pop();
                        else 
                        return false;
                    }
                

                }
            }else
            a.push(str[i]);
        }

//2 stacks
class Solution {
    public boolean isValid(String s) {
        char[] str=s.toCharArray();
        Stack<Character> a=new Stack<>();//left
        Stack<Character> b=new Stack<>();//right
        char c1;
        char c2;
        for(int i=0;i<s.length();i++){
            if(str[i]=='('||str[i]=='{'||str[i]=='[')
            {
                switch(str[i]){
                    case '(':
                    a.push(')');
                    break;
                    case '{':
                    a.push('}');
                    break;
                    case '[':
                    a.push(']');
                    break;
                }
            }
            else{
                b.push(str[i]);
                if(!a.isEmpty()&&str[i]!=a.peek())
                return false;
                else if(!a.isEmpty()&&str[i]==a.pop()) 
                b.pop();
            }
        }
        return a.isEmpty()&&b.isEmpty();

        

    }
}

        return a.isEmpty();

    }
}
