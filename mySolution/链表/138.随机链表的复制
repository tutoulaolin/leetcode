/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    //哈希表，把原链表每个节点映射拷贝节点
    Map<Node,Node> map=new HashMap<Node,Node>();

    public Node copyRandomList(Node head) {
        if(head==null)
        return null;

        if(!map.containsKey(head)){
            Node newNode=new Node(head.val);
            map.put(head,newNode);
            newNode.next=copyRandomList(head.next);
            newNode.random=copyRandomList(head.random);
        }

        return map.get(head);
    }
}
