//Edition1：新建一个链表
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* cur=new ListNode();
        cur=head;
        ListNode* h_p=nullptr;
        while(cur!=NULL)
        {
            
            h_p=new ListNode(cur->val,h_p);
            cur=cur->next;
            
        }
        delete head;

        return h_p;

    }
};

//Edition2：三个指针，直接改变箭头方向
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode pre=null;
        ListNode cur=head;
       
        while(cur!=null)
        {
            ListNode nextNode=cur.next;
            cur.next=pre;
            pre=cur;
            cur=nextNode;
            
            
        }
        return pre;




    }
}
