class Trie {

    private Trie[] children;
    private boolean isEnd;

    public Trie() {
        children=new Trie[26];//26个字母
        isEnd=false;

    }
    
    public void insert(String word) {
        Trie node=this;
        for(char c:word.toCharArray()){
            int index=c-'a';
            if(node.children[index]==null){
                node.children[index]=new Trie();
            }
            node=node.children[index];
        }
        node.isEnd=true;
    }
    
    public boolean search(String word) {
        Trie node=searchPrefix(word);

        return node!=null&&node.isEnd;
    }
    
    public boolean startsWith(String prefix) {
        Trie node=searchPrefix(prefix);

        return node!=null;
    }

    public Trie searchPrefix(String prefix){
            Trie node=this;
            for(char c:prefix.toCharArray()){
                int index=c-'a';
                if(node.children[index]!=null){
                    node=node.children[index];
                }else{
                    return null;
                }
            }

            return node;
    }
}

/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.insert(word);
 * boolean param_2 = obj.search(word);
 * boolean param_3 = obj.startsWith(prefix);
 */
