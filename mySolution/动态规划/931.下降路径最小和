class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
        int row=matrix.size();
        int col=matrix[0].size();

        vector<vector<int>> dp(row,(vector<int>(col,0)));

        for(int i=0;i<col;i++)//第一行
        dp[0][i]=matrix[0][i];
        
        for(int i=1;i<row;i++)
        {
            for(int j=0;j<col;j++){
            if(j==0)
            dp[i][j]=min(dp[i-1][j],dp[i-1][j+1])+matrix[i][j];
            else if(j==col-1)
            dp[i][j]=min(dp[i-1][j],dp[i-1][j-1])+matrix[i][j];
            else
            dp[i][j]=min(dp[i-1][j-1], min(dp[i-1][j],dp[i-1][j+1]))+matrix[i][j];
            }
            
        }
        return *min_element(dp[row-1].begin(),dp[row-1].end());

    }
};
