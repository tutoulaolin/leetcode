class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int row=triangle.size();
        int maxClo=triangle[row-1].size();

        vector<vector<int>> dp(row,vector<int>(maxClo,0));
        dp[0][0]=triangle[0][0];
        if(row>1){
            dp[1][0]=triangle[1][0]+dp[0][0];
            dp[1][1]=triangle[1][1]+dp[0][0];
        }
        

        for(int i=2;i<triangle.size();i++)
        {
            for(int j=0;j<triangle[i].size();j++)
            if(j-1>=0&&j!=triangle[i].size()-1)
            dp[i][j]=min(dp[i-1][j],dp[i-1][j-1])+triangle[i][j];
            else if(j-1<0)
            dp[i][j]=dp[i-1][j]+triangle[i][j];
            else if(j==triangle[i].size()-1)
            dp[i][j]=dp[i-1][j-1]+triangle[i][j];
        }

        sort(dp[row-1].begin(),dp[row-1].end());
        return dp[row-1][0];


    }
};
