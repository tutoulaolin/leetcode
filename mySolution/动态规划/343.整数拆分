//没有什么根据的半暴力半动规
class Solution {
    public int integerBreak(int n) {
        int[] dp=new int[n+1];
        dp[0]=0;
        dp[1]=0;
        dp[2]=1;
        if(n>2)
        dp[3]=2;
        if(n>3)
        dp[4]=4;
        if(n>4)
        dp[5]=6;
        if(n>5)
        dp[6]=9;
        for(int i=7;i<=n;i++){
            int max=0;
            for(int k=3;k<i-2;k++){
                max=Math.max(dp[i-k]*k,max);
            }
            dp[i]=max;
        }

        return dp[n];
        
        
    }
}

//更好的动规
class Solution {
    public int integerBreak(int n) {
        int[] dp=new int[n+1];
        dp[0]=0;
        dp[1]=0;
        dp[2]=1;
        if(n>2)
        
        for(int i=3;i<=n;i++){
            
            for(int k=1;k<i;k++){
                dp[i]=Math.max(dp[i],Math.max(dp[i-k]*k,(i-k)*k));
            }
            
        }

        return dp[n];
        
        
    }
}
