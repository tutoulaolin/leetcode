/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void traversal(TreeNode root1,TreeNode root2){
        if(root1==null||root2==null)
        return;
        root1.val+=root2.val;
        if(root1.left==null){
            root1.left=root2.left;
        }else {
            traversal(root1.left,root2.left);
        }
        
        if(root1.right==null){
            root1.right=root2.right;
        }else{
            traversal(root1.right,root2.right);
        }

    
        
    }

    public TreeNode mergeTrees(TreeNode root1, TreeNode root2) {
        if(root1==null&&root2==null)
        return null;
        if(root1==null&&root2!=null)
        return root2;
        if(root1!=null&&root2==null)
        return root1;

        traversal(root1,root2);

        return root1;
    }
}
