/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> res=new ArrayList<List<Integer>>();

    public void traversal(TreeNode root,List<Integer> list,int targetSum){
            list.add(root.val);
            if(root.left==null&&root.right==null)
            {
                if(targetSum-root.val==0)
                {
                    
                    res.add(new ArrayList<Integer>(list));
                    
                }
                return;
                
            }
            
            if(root.left!=null){
               
                
                traversal(root.left,list,targetSum-root.val);
                list.remove(list.size()-1); 
            }
            
            if(root.right!=null){
                
                
                traversal(root.right,list,targetSum-root.val);
                list.remove(list.size()-1);
            }
            

    }
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {

        if(root==null)
        return res;
        List<Integer> list=new ArrayList<>();
        traversal(root,list,targetSum);

        return res;
        
    }
}
