/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        Queue<TreeNode> que=new LinkedList<>();
        if(root.left==null&&root.right==null)
        return root.val;
        int num=root.val;
        que.offer(root);
        while(!que.isEmpty()){
            int len=que.size();
            int flag=len;
            while(len>0){
                TreeNode cur=que.poll();
                if(cur.left!=null)
                que.offer(cur.left);
                if(cur.right!=null)
                que.offer(cur.right);
                if(len==flag)
                num=cur.val;

                len--;
            }
        }

        return num;
        


    }
}
