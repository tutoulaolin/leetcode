/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean flag=false;
    public void traversal(TreeNode root,int sum,int targetSum){
        if(root.left==null&&root.right==null&&sum+root.val==targetSum)
        flag=true;
        if(root.left!=null)
        traversal(root.left,sum+root.val,targetSum);
        if(root.right!=null)
        traversal(root.right,sum+root.val,targetSum);
        
    }
    public boolean hasPathSum(TreeNode root, int targetSum) {
        if(root==null)
        return false;
        int sum=0;
        
        traversal(root,sum,targetSum);

        return flag;
        
    }
}


//优化

class Solution {
    
    public boolean hasPathSum(TreeNode root, int targetSum) {
        if(root==null)
        return false;
        if(root.left==null&&root.right==null)
        return targetSum-root.val==0;
    
        return hasPathSum(root.left,targetSum-root.val)||hasPathSum(root.right,targetSum-root.val);
        
    }
}
