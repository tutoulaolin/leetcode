/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

 /**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {

    TreeNode pre=null;
    int min=Integer.MAX_VALUE;;
    public void traversal(TreeNode root)
    {
        if(root==null)
        return;

        traversal(root.left);//左
        if(pre!=null){//中
            min=Math.min(root.val-pre.val,min);
        }
        pre=root;
        traversal(root.right);//右
    }
    public int minDiffInBST(TreeNode root) {
      
        traversal(root);

        return min;
        
    }
}
