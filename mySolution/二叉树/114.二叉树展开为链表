/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 //暴力解法
class Solution {
    public void traversal(TreeNode root,List<Integer> list){
        if(root==null)
        return;
        list.add(root.val);
        traversal(root.left,list);
        traversal(root.right,list);
    }
    public void flatten(TreeNode root) {
        if(root==null)
        return;
        List<Integer> list=new LinkedList<>();
        traversal(root,list);
        TreeNode cur=root;
        root.val=(list.get(0));
        if(root.left!=null)
        root.left=null;
        if(root.right!=null)
        root.right=null;

        for(int i=1;i<list.size();i++){
            cur.right=new TreeNode(list.get(i));
            cur=cur.right;
        }

        

    }
}
