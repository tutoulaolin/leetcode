/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean isSame(TreeNode p,TreeNode q){
        if(p==null&&q==null)
        return true;
        else if(p==null&&q!=null||p!=null&&q==null)
        return false;
        else if(p.val!=q.val)
        return false;

        boolean flag1=isSame(p.left,q.left);
        boolean flag2=isSame(p.right,q.right);

        return flag1&&flag2;

    }
    public boolean isSubtree(TreeNode root, TreeNode subRoot) {

        if(root==null)
        return false;
        
        if(isSame(root,subRoot))
        return true;
        else
        return isSubtree(root.left,subRoot)||isSubtree(root.right,subRoot);

        

        
    }
}
