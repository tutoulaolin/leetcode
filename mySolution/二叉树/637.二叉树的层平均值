/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
    List<Double> res=new ArrayList<>();
       if(root==null)
        return res;

        Queue<TreeNode> que=new LinkedList<TreeNode>();
        TreeNode cur=root;
        que.offer(cur);

        while(!que.isEmpty()){
            int len=que.size();
            int k=len;
            Double sum=0.00000;
           
            while(len>0){
                
                cur=que.poll();
                sum+=cur.val;
                
                if(cur.left!=null) que.offer(cur.left);
                if(cur.right!=null) que.offer(cur.right);
            
                len--;
            
            }
            
            res.add(sum/k);

        }
        return res;
    }
}
